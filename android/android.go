// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Tue, 17 May 2016 04:44:23 MSK.
// By http://git.io/cgogen. DO NOT EDIT.

package android

/*
#cgo LDFLAGS: -landroid
#include <android/api-level.h>
#include <android/asset_manager.h>
#include <android/asset_manager_jni.h>
#include <android/input.h>
#include <android/keycodes.h>
#include <android/log.h>
#include <android/looper.h>
#include <android/native_activity.h>
#include <android/native_window.h>
#include <android/native_window_jni.h>
#include <android/obb.h>
#include <android/rect.h>
#include <android/storage_manager.h>
#include <android/tts.h>
#include <android/window.h>
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import "unsafe"

// AssetManagerOpenDir function as declared in android/asset_manager.h:52
func AssetManagerOpenDir(mgr *AssetManager, dirName string) *AssetDir {
	cmgr, _ := (*C.AAssetManager)(unsafe.Pointer(mgr)), cgoAllocsUnknown
	cdirName, _ := unpackPCharString(dirName)
	__ret := C.AAssetManager_openDir(cmgr, cdirName)
	__v := *(**AssetDir)(unsafe.Pointer(&__ret))
	return __v
}

// AssetManagerOpen function as declared in android/asset_manager.h:59
func AssetManagerOpen(mgr *AssetManager, filename string, mode int32) *Asset {
	cmgr, _ := (*C.AAssetManager)(unsafe.Pointer(mgr)), cgoAllocsUnknown
	cfilename, _ := unpackPCharString(filename)
	cmode, _ := (C.int)(mode), cgoAllocsUnknown
	__ret := C.AAssetManager_open(cmgr, cfilename, cmode)
	__v := *(**Asset)(unsafe.Pointer(&__ret))
	return __v
}

// AssetDirGetNextFileName function as declared in android/asset_manager.h:71
func AssetDirGetNextFileName(assetDir *AssetDir) string {
	cassetDir, _ := (*C.AAssetDir)(unsafe.Pointer(assetDir)), cgoAllocsUnknown
	__ret := C.AAssetDir_getNextFileName(cassetDir)
	__v := packPCharString(__ret)
	return __v
}

// AssetDirRewind function as declared in android/asset_manager.h:76
func AssetDirRewind(assetDir *AssetDir) {
	cassetDir, _ := (*C.AAssetDir)(unsafe.Pointer(assetDir)), cgoAllocsUnknown
	C.AAssetDir_rewind(cassetDir)
}

// AssetDirClose function as declared in android/asset_manager.h:81
func AssetDirClose(assetDir *AssetDir) {
	cassetDir, _ := (*C.AAssetDir)(unsafe.Pointer(assetDir)), cgoAllocsUnknown
	C.AAssetDir_close(cassetDir)
}

// AssetRead function as declared in android/asset_manager.h:88
func AssetRead(asset *Asset, buf unsafe.Pointer, count uint32) int32 {
	casset, _ := (*C.AAsset)(unsafe.Pointer(asset)), cgoAllocsUnknown
	cbuf, _ := (unsafe.Pointer)(unsafe.Pointer(buf)), cgoAllocsUnknown
	ccount, _ := (C.size_t)(count), cgoAllocsUnknown
	__ret := C.AAsset_read(casset, cbuf, ccount)
	__v := (int32)(__ret)
	return __v
}

// AssetSeek function as declared in android/asset_manager.h:96
func AssetSeek(asset *Asset, offset int, whence int32) int {
	casset, _ := (*C.AAsset)(unsafe.Pointer(asset)), cgoAllocsUnknown
	coffset, _ := (C.off_t)(offset), cgoAllocsUnknown
	cwhence, _ := (C.int)(whence), cgoAllocsUnknown
	__ret := C.AAsset_seek(casset, coffset, cwhence)
	__v := (int)(__ret)
	return __v
}

// AssetSeek64 function as declared in android/asset_manager.h:107
func AssetSeek64(asset *Asset, offset int64, whence int32) int64 {
	casset, _ := (*C.AAsset)(unsafe.Pointer(asset)), cgoAllocsUnknown
	coffset, _ := (C.off64_t)(offset), cgoAllocsUnknown
	cwhence, _ := (C.int)(whence), cgoAllocsUnknown
	__ret := C.AAsset_seek64(casset, coffset, cwhence)
	__v := (int64)(__ret)
	return __v
}

// AssetClose function as declared in android/asset_manager.h:112
func AssetClose(asset *Asset) {
	casset, _ := (*C.AAsset)(unsafe.Pointer(asset)), cgoAllocsUnknown
	C.AAsset_close(casset)
}

// AssetGetBuffer function as declared in android/asset_manager.h:119
func AssetGetBuffer(asset *Asset) unsafe.Pointer {
	casset, _ := (*C.AAsset)(unsafe.Pointer(asset)), cgoAllocsUnknown
	__ret := C.AAsset_getBuffer(casset)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// AssetGetLength function as declared in android/asset_manager.h:124
func AssetGetLength(asset *Asset) int {
	casset, _ := (*C.AAsset)(unsafe.Pointer(asset)), cgoAllocsUnknown
	__ret := C.AAsset_getLength(casset)
	__v := (int)(__ret)
	return __v
}

// AssetGetLength64 function as declared in android/asset_manager.h:130
func AssetGetLength64(asset *Asset) int64 {
	casset, _ := (*C.AAsset)(unsafe.Pointer(asset)), cgoAllocsUnknown
	__ret := C.AAsset_getLength64(casset)
	__v := (int64)(__ret)
	return __v
}

// AssetGetRemainingLength function as declared in android/asset_manager.h:135
func AssetGetRemainingLength(asset *Asset) int {
	casset, _ := (*C.AAsset)(unsafe.Pointer(asset)), cgoAllocsUnknown
	__ret := C.AAsset_getRemainingLength(casset)
	__v := (int)(__ret)
	return __v
}

// AssetGetRemainingLength64 function as declared in android/asset_manager.h:142
func AssetGetRemainingLength64(asset *Asset) int64 {
	casset, _ := (*C.AAsset)(unsafe.Pointer(asset)), cgoAllocsUnknown
	__ret := C.AAsset_getRemainingLength64(casset)
	__v := (int64)(__ret)
	return __v
}

// AssetOpenFileDescriptor function as declared in android/asset_manager.h:152
func AssetOpenFileDescriptor(asset *Asset, outStart *int, outLength *int) int32 {
	casset, _ := (*C.AAsset)(unsafe.Pointer(asset)), cgoAllocsUnknown
	coutStart, _ := (*C.off_t)(unsafe.Pointer(outStart)), cgoAllocsUnknown
	coutLength, _ := (*C.off_t)(unsafe.Pointer(outLength)), cgoAllocsUnknown
	__ret := C.AAsset_openFileDescriptor(casset, coutStart, coutLength)
	__v := (int32)(__ret)
	return __v
}

// AssetOpenFileDescriptor64 function as declared in android/asset_manager.h:163
func AssetOpenFileDescriptor64(asset *Asset, outStart *int64, outLength *int64) int32 {
	casset, _ := (*C.AAsset)(unsafe.Pointer(asset)), cgoAllocsUnknown
	coutStart, _ := (*C.off64_t)(unsafe.Pointer(outStart)), cgoAllocsUnknown
	coutLength, _ := (*C.off64_t)(unsafe.Pointer(outLength)), cgoAllocsUnknown
	__ret := C.AAsset_openFileDescriptor64(casset, coutStart, coutLength)
	__v := (int32)(__ret)
	return __v
}

// AssetIsAllocated function as declared in android/asset_manager.h:169
func AssetIsAllocated(asset *Asset) int32 {
	casset, _ := (*C.AAsset)(unsafe.Pointer(asset)), cgoAllocsUnknown
	__ret := C.AAsset_isAllocated(casset)
	__v := (int32)(__ret)
	return __v
}

// AssetManagerFromJava function as declared in android/asset_manager_jni.h:34
func AssetManagerFromJava(env *JNIEnv, assetManager unsafe.Pointer) *AssetManager {
	cenv, _ := (*C.JNIEnv)(unsafe.Pointer(env)), cgoAllocsUnknown
	cassetManager, _ := (unsafe.Pointer)(unsafe.Pointer(assetManager)), cgoAllocsUnknown
	__ret := C.AAssetManager_fromJava(cenv, cassetManager)
	__v := *(**AssetManager)(unsafe.Pointer(&__ret))
	return __v
}

// LooperForThread function as declared in android/looper.h:45
func LooperForThread() *Looper {
	__ret := C.ALooper_forThread()
	__v := *(**Looper)(unsafe.Pointer(&__ret))
	return __v
}

// LooperPrepare function as declared in android/looper.h:65
func LooperPrepare(opts int32) *Looper {
	copts, _ := (C.int)(opts), cgoAllocsUnknown
	__ret := C.ALooper_prepare(copts)
	__v := *(**Looper)(unsafe.Pointer(&__ret))
	return __v
}

// LooperAcquire function as declared in android/looper.h:99
func LooperAcquire(looper *Looper) {
	clooper, _ := (*C.ALooper)(unsafe.Pointer(looper)), cgoAllocsUnknown
	C.ALooper_acquire(clooper)
}

// LooperRelease function as declared in android/looper.h:104
func LooperRelease(looper *Looper) {
	clooper, _ := (*C.ALooper)(unsafe.Pointer(looper)), cgoAllocsUnknown
	C.ALooper_release(clooper)
}

// LooperPollOnce function as declared in android/looper.h:187
func LooperPollOnce(timeoutMillis int32, outFd *int32, outEvents *int32, outData []unsafe.Pointer) int32 {
	ctimeoutMillis, _ := (C.int)(timeoutMillis), cgoAllocsUnknown
	coutFd, _ := (*C.int)(unsafe.Pointer(outFd)), cgoAllocsUnknown
	coutEvents, _ := (*C.int)(unsafe.Pointer(outEvents)), cgoAllocsUnknown
	coutData, _ := (*unsafe.Pointer)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outData)).Data)), cgoAllocsUnknown
	__ret := C.ALooper_pollOnce(ctimeoutMillis, coutFd, coutEvents, coutData)
	__v := (int32)(__ret)
	return __v
}

// LooperPollAll function as declared in android/looper.h:194
func LooperPollAll(timeoutMillis int32, outFd *int32, outEvents *int32, outData []unsafe.Pointer) int32 {
	ctimeoutMillis, _ := (C.int)(timeoutMillis), cgoAllocsUnknown
	coutFd, _ := (*C.int)(unsafe.Pointer(outFd)), cgoAllocsUnknown
	coutEvents, _ := (*C.int)(unsafe.Pointer(outEvents)), cgoAllocsUnknown
	coutData, _ := (*unsafe.Pointer)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&outData)).Data)), cgoAllocsUnknown
	__ret := C.ALooper_pollAll(ctimeoutMillis, coutFd, coutEvents, coutData)
	__v := (int32)(__ret)
	return __v
}

// LooperWake function as declared in android/looper.h:202
func LooperWake(looper *Looper) {
	clooper, _ := (*C.ALooper)(unsafe.Pointer(looper)), cgoAllocsUnknown
	C.ALooper_wake(clooper)
}

// LooperAddFd function as declared in android/looper.h:230
func LooperAddFd(looper *Looper, fd int32, ident int32, events int32, callback LooperCallbackFunc, data unsafe.Pointer) int32 {
	clooper, _ := (*C.ALooper)(unsafe.Pointer(looper)), cgoAllocsUnknown
	cfd, _ := (C.int)(fd), cgoAllocsUnknown
	cident, _ := (C.int)(ident), cgoAllocsUnknown
	cevents, _ := (C.int)(events), cgoAllocsUnknown
	ccallback, _ := callback.PassValue()
	cdata, _ := (unsafe.Pointer)(unsafe.Pointer(data)), cgoAllocsUnknown
	__ret := C.ALooper_addFd(clooper, cfd, cident, cevents, ccallback, cdata)
	__v := (int32)(__ret)
	return __v
}

// LooperRemoveFd function as declared in android/looper.h:250
func LooperRemoveFd(looper *Looper, fd int32) int32 {
	clooper, _ := (*C.ALooper)(unsafe.Pointer(looper)), cgoAllocsUnknown
	cfd, _ := (C.int)(fd), cgoAllocsUnknown
	__ret := C.ALooper_removeFd(clooper, cfd)
	__v := (int32)(__ret)
	return __v
}

// NativeActivityFinish function as declared in android/native_activity.h:252
func NativeActivityFinish(activity *NativeActivity) {
	cactivity, _ := (*C.ANativeActivity)(unsafe.Pointer(activity)), cgoAllocsUnknown
	C.ANativeActivity_finish(cactivity)
}

// NativeActivitySetWindowFormat function as declared in android/native_activity.h:260
func NativeActivitySetWindowFormat(activity *NativeActivity, format int32) {
	cactivity, _ := (*C.ANativeActivity)(unsafe.Pointer(activity)), cgoAllocsUnknown
	cformat, _ := (C.int32_t)(format), cgoAllocsUnknown
	C.ANativeActivity_setWindowFormat(cactivity, cformat)
}

// NativeActivitySetWindowFlags function as declared in android/native_activity.h:268
func NativeActivitySetWindowFlags(activity *NativeActivity, addFlags uint32, removeFlags uint32) {
	cactivity, _ := (*C.ANativeActivity)(unsafe.Pointer(activity)), cgoAllocsUnknown
	caddFlags, _ := (C.uint32_t)(addFlags), cgoAllocsUnknown
	cremoveFlags, _ := (C.uint32_t)(removeFlags), cgoAllocsUnknown
	C.ANativeActivity_setWindowFlags(cactivity, caddFlags, cremoveFlags)
}

// NativeActivityShowSoftInput function as declared in android/native_activity.h:286
func NativeActivityShowSoftInput(activity *NativeActivity, flags uint32) {
	cactivity, _ := (*C.ANativeActivity)(unsafe.Pointer(activity)), cgoAllocsUnknown
	cflags, _ := (C.uint32_t)(flags), cgoAllocsUnknown
	C.ANativeActivity_showSoftInput(cactivity, cflags)
}

// NativeActivityHideSoftInput function as declared in android/native_activity.h:303
func NativeActivityHideSoftInput(activity *NativeActivity, flags uint32) {
	cactivity, _ := (*C.ANativeActivity)(unsafe.Pointer(activity)), cgoAllocsUnknown
	cflags, _ := (C.uint32_t)(flags), cgoAllocsUnknown
	C.ANativeActivity_hideSoftInput(cactivity, cflags)
}

// InputEventGetType function as declared in android/input.h:499
func InputEventGetType(event *InputEvent) int32 {
	cevent, _ := (*C.AInputEvent)(unsafe.Pointer(event)), cgoAllocsUnknown
	__ret := C.AInputEvent_getType(cevent)
	__v := (int32)(__ret)
	return __v
}

// InputEventGetDeviceId function as declared in android/input.h:511
func InputEventGetDeviceId(event *InputEvent) int32 {
	cevent, _ := (*C.AInputEvent)(unsafe.Pointer(event)), cgoAllocsUnknown
	__ret := C.AInputEvent_getDeviceId(cevent)
	__v := (int32)(__ret)
	return __v
}

// InputEventGetSource function as declared in android/input.h:514
func InputEventGetSource(event *InputEvent) int32 {
	cevent, _ := (*C.AInputEvent)(unsafe.Pointer(event)), cgoAllocsUnknown
	__ret := C.AInputEvent_getSource(cevent)
	__v := (int32)(__ret)
	return __v
}

// KeyEventGetAction function as declared in android/input.h:519
func KeyEventGetAction(keyEvent *InputEvent) int32 {
	ckeyEvent, _ := (*C.AInputEvent)(unsafe.Pointer(keyEvent)), cgoAllocsUnknown
	__ret := C.AKeyEvent_getAction(ckeyEvent)
	__v := (int32)(__ret)
	return __v
}

// KeyEventGetFlags function as declared in android/input.h:522
func KeyEventGetFlags(keyEvent *InputEvent) int32 {
	ckeyEvent, _ := (*C.AInputEvent)(unsafe.Pointer(keyEvent)), cgoAllocsUnknown
	__ret := C.AKeyEvent_getFlags(ckeyEvent)
	__v := (int32)(__ret)
	return __v
}

// KeyEventGetKeyCode function as declared in android/input.h:526
func KeyEventGetKeyCode(keyEvent *InputEvent) int32 {
	ckeyEvent, _ := (*C.AInputEvent)(unsafe.Pointer(keyEvent)), cgoAllocsUnknown
	__ret := C.AKeyEvent_getKeyCode(ckeyEvent)
	__v := (int32)(__ret)
	return __v
}

// KeyEventGetScanCode function as declared in android/input.h:530
func KeyEventGetScanCode(keyEvent *InputEvent) int32 {
	ckeyEvent, _ := (*C.AInputEvent)(unsafe.Pointer(keyEvent)), cgoAllocsUnknown
	__ret := C.AKeyEvent_getScanCode(ckeyEvent)
	__v := (int32)(__ret)
	return __v
}

// KeyEventGetMetaState function as declared in android/input.h:533
func KeyEventGetMetaState(keyEvent *InputEvent) int32 {
	ckeyEvent, _ := (*C.AInputEvent)(unsafe.Pointer(keyEvent)), cgoAllocsUnknown
	__ret := C.AKeyEvent_getMetaState(ckeyEvent)
	__v := (int32)(__ret)
	return __v
}

// KeyEventGetRepeatCount function as declared in android/input.h:539
func KeyEventGetRepeatCount(keyEvent *InputEvent) int32 {
	ckeyEvent, _ := (*C.AInputEvent)(unsafe.Pointer(keyEvent)), cgoAllocsUnknown
	__ret := C.AKeyEvent_getRepeatCount(ckeyEvent)
	__v := (int32)(__ret)
	return __v
}

// KeyEventGetDownTime function as declared in android/input.h:546
func KeyEventGetDownTime(keyEvent *InputEvent) int64 {
	ckeyEvent, _ := (*C.AInputEvent)(unsafe.Pointer(keyEvent)), cgoAllocsUnknown
	__ret := C.AKeyEvent_getDownTime(ckeyEvent)
	__v := (int64)(__ret)
	return __v
}

// KeyEventGetEventTime function as declared in android/input.h:550
func KeyEventGetEventTime(keyEvent *InputEvent) int64 {
	ckeyEvent, _ := (*C.AInputEvent)(unsafe.Pointer(keyEvent)), cgoAllocsUnknown
	__ret := C.AKeyEvent_getEventTime(ckeyEvent)
	__v := (int64)(__ret)
	return __v
}

// MotionEventGetAction function as declared in android/input.h:555
func MotionEventGetAction(motionEvent *InputEvent) int32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	__ret := C.AMotionEvent_getAction(cmotionEvent)
	__v := (int32)(__ret)
	return __v
}

// MotionEventGetFlags function as declared in android/input.h:558
func MotionEventGetFlags(motionEvent *InputEvent) int32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	__ret := C.AMotionEvent_getFlags(cmotionEvent)
	__v := (int32)(__ret)
	return __v
}

// MotionEventGetMetaState function as declared in android/input.h:562
func MotionEventGetMetaState(motionEvent *InputEvent) int32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	__ret := C.AMotionEvent_getMetaState(cmotionEvent)
	__v := (int32)(__ret)
	return __v
}

// MotionEventGetButtonState function as declared in android/input.h:565
func MotionEventGetButtonState(motionEvent *InputEvent) int32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	__ret := C.AMotionEvent_getButtonState(cmotionEvent)
	__v := (int32)(__ret)
	return __v
}

// MotionEventGetEdgeFlags function as declared in android/input.h:570
func MotionEventGetEdgeFlags(motionEvent *InputEvent) int32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	__ret := C.AMotionEvent_getEdgeFlags(cmotionEvent)
	__v := (int32)(__ret)
	return __v
}

// MotionEventGetDownTime function as declared in android/input.h:574
func MotionEventGetDownTime(motionEvent *InputEvent) int64 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	__ret := C.AMotionEvent_getDownTime(cmotionEvent)
	__v := (int64)(__ret)
	return __v
}

// MotionEventGetEventTime function as declared in android/input.h:578
func MotionEventGetEventTime(motionEvent *InputEvent) int64 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	__ret := C.AMotionEvent_getEventTime(cmotionEvent)
	__v := (int64)(__ret)
	return __v
}

// MotionEventGetXOffset function as declared in android/input.h:584
func MotionEventGetXOffset(motionEvent *InputEvent) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	__ret := C.AMotionEvent_getXOffset(cmotionEvent)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetYOffset function as declared in android/input.h:590
func MotionEventGetYOffset(motionEvent *InputEvent) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	__ret := C.AMotionEvent_getYOffset(cmotionEvent)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetXPrecision function as declared in android/input.h:595
func MotionEventGetXPrecision(motionEvent *InputEvent) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	__ret := C.AMotionEvent_getXPrecision(cmotionEvent)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetYPrecision function as declared in android/input.h:600
func MotionEventGetYPrecision(motionEvent *InputEvent) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	__ret := C.AMotionEvent_getYPrecision(cmotionEvent)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetPointerCount function as declared in android/input.h:604
func MotionEventGetPointerCount(motionEvent *InputEvent) uint32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	__ret := C.AMotionEvent_getPointerCount(cmotionEvent)
	__v := (uint32)(__ret)
	return __v
}

// MotionEventGetPointerId function as declared in android/input.h:610
func MotionEventGetPointerId(motionEvent *InputEvent, pointerIndex uint32) int32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getPointerId(cmotionEvent, cpointerIndex)
	__v := (int32)(__ret)
	return __v
}

// MotionEventGetToolType function as declared in android/input.h:615
func MotionEventGetToolType(motionEvent *InputEvent, pointerIndex uint32) int32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getToolType(cmotionEvent, cpointerIndex)
	__v := (int32)(__ret)
	return __v
}

// MotionEventGetRawX function as declared in android/input.h:621
func MotionEventGetRawX(motionEvent *InputEvent, pointerIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getRawX(cmotionEvent, cpointerIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetRawY function as declared in android/input.h:627
func MotionEventGetRawY(motionEvent *InputEvent, pointerIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getRawY(cmotionEvent, cpointerIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetX function as declared in android/input.h:632
func MotionEventGetX(motionEvent *InputEvent, pointerIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getX(cmotionEvent, cpointerIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetY function as declared in android/input.h:637
func MotionEventGetY(motionEvent *InputEvent, pointerIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getY(cmotionEvent, cpointerIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetPressure function as declared in android/input.h:643
func MotionEventGetPressure(motionEvent *InputEvent, pointerIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getPressure(cmotionEvent, cpointerIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetSize function as declared in android/input.h:651
func MotionEventGetSize(motionEvent *InputEvent, pointerIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getSize(cmotionEvent, cpointerIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetTouchMajor function as declared in android/input.h:655
func MotionEventGetTouchMajor(motionEvent *InputEvent, pointerIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getTouchMajor(cmotionEvent, cpointerIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetTouchMinor function as declared in android/input.h:659
func MotionEventGetTouchMinor(motionEvent *InputEvent, pointerIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getTouchMinor(cmotionEvent, cpointerIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetToolMajor function as declared in android/input.h:665
func MotionEventGetToolMajor(motionEvent *InputEvent, pointerIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getToolMajor(cmotionEvent, cpointerIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetToolMinor function as declared in android/input.h:671
func MotionEventGetToolMinor(motionEvent *InputEvent, pointerIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getToolMinor(cmotionEvent, cpointerIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetOrientation function as declared in android/input.h:681
func MotionEventGetOrientation(motionEvent *InputEvent, pointerIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getOrientation(cmotionEvent, cpointerIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetAxisValue function as declared in android/input.h:684
func MotionEventGetAxisValue(motionEvent *InputEvent, axis int32, pointerIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	caxis, _ := (C.int32_t)(axis), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getAxisValue(cmotionEvent, caxis, cpointerIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetHistorySize function as declared in android/input.h:691
func MotionEventGetHistorySize(motionEvent *InputEvent) uint32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	__ret := C.AMotionEvent_getHistorySize(cmotionEvent)
	__v := (uint32)(__ret)
	return __v
}

// MotionEventGetHistoricalEventTime function as declared in android/input.h:695
func MotionEventGetHistoricalEventTime(motionEvent *InputEvent, historyIndex uint32) int64 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	chistoryIndex, _ := (C.size_t)(historyIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getHistoricalEventTime(cmotionEvent, chistoryIndex)
	__v := (int64)(__ret)
	return __v
}

// MotionEventGetHistoricalRawX function as declared in android/input.h:705
func MotionEventGetHistoricalRawX(motionEvent *InputEvent, pointerIndex uint32, historyIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	chistoryIndex, _ := (C.size_t)(historyIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getHistoricalRawX(cmotionEvent, cpointerIndex, chistoryIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetHistoricalRawY function as declared in android/input.h:715
func MotionEventGetHistoricalRawY(motionEvent *InputEvent, pointerIndex uint32, historyIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	chistoryIndex, _ := (C.size_t)(historyIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getHistoricalRawY(cmotionEvent, cpointerIndex, chistoryIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetHistoricalX function as declared in android/input.h:722
func MotionEventGetHistoricalX(motionEvent *InputEvent, pointerIndex uint32, historyIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	chistoryIndex, _ := (C.size_t)(historyIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getHistoricalX(cmotionEvent, cpointerIndex, chistoryIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetHistoricalY function as declared in android/input.h:729
func MotionEventGetHistoricalY(motionEvent *InputEvent, pointerIndex uint32, historyIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	chistoryIndex, _ := (C.size_t)(historyIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getHistoricalY(cmotionEvent, cpointerIndex, chistoryIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetHistoricalPressure function as declared in android/input.h:737
func MotionEventGetHistoricalPressure(motionEvent *InputEvent, pointerIndex uint32, historyIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	chistoryIndex, _ := (C.size_t)(historyIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getHistoricalPressure(cmotionEvent, cpointerIndex, chistoryIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetHistoricalSize function as declared in android/input.h:747
func MotionEventGetHistoricalSize(motionEvent *InputEvent, pointerIndex uint32, historyIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	chistoryIndex, _ := (C.size_t)(historyIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getHistoricalSize(cmotionEvent, cpointerIndex, chistoryIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetHistoricalTouchMajor function as declared in android/input.h:753
func MotionEventGetHistoricalTouchMajor(motionEvent *InputEvent, pointerIndex uint32, historyIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	chistoryIndex, _ := (C.size_t)(historyIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getHistoricalTouchMajor(cmotionEvent, cpointerIndex, chistoryIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetHistoricalTouchMinor function as declared in android/input.h:759
func MotionEventGetHistoricalTouchMinor(motionEvent *InputEvent, pointerIndex uint32, historyIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	chistoryIndex, _ := (C.size_t)(historyIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getHistoricalTouchMinor(cmotionEvent, cpointerIndex, chistoryIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetHistoricalToolMajor function as declared in android/input.h:767
func MotionEventGetHistoricalToolMajor(motionEvent *InputEvent, pointerIndex uint32, historyIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	chistoryIndex, _ := (C.size_t)(historyIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getHistoricalToolMajor(cmotionEvent, cpointerIndex, chistoryIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetHistoricalToolMinor function as declared in android/input.h:775
func MotionEventGetHistoricalToolMinor(motionEvent *InputEvent, pointerIndex uint32, historyIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	chistoryIndex, _ := (C.size_t)(historyIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getHistoricalToolMinor(cmotionEvent, cpointerIndex, chistoryIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetHistoricalOrientation function as declared in android/input.h:787
func MotionEventGetHistoricalOrientation(motionEvent *InputEvent, pointerIndex uint32, historyIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	chistoryIndex, _ := (C.size_t)(historyIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getHistoricalOrientation(cmotionEvent, cpointerIndex, chistoryIndex)
	__v := (float32)(__ret)
	return __v
}

// MotionEventGetHistoricalAxisValue function as declared in android/input.h:792
func MotionEventGetHistoricalAxisValue(motionEvent *InputEvent, axis int32, pointerIndex uint32, historyIndex uint32) float32 {
	cmotionEvent, _ := (*C.AInputEvent)(unsafe.Pointer(motionEvent)), cgoAllocsUnknown
	caxis, _ := (C.int32_t)(axis), cgoAllocsUnknown
	cpointerIndex, _ := (C.size_t)(pointerIndex), cgoAllocsUnknown
	chistoryIndex, _ := (C.size_t)(historyIndex), cgoAllocsUnknown
	__ret := C.AMotionEvent_getHistoricalAxisValue(cmotionEvent, caxis, cpointerIndex, chistoryIndex)
	__v := (float32)(__ret)
	return __v
}

// InputQueueAttachLooper function as declared in android/input.h:809
func InputQueueAttachLooper(queue *InputQueue, looper *Looper, ident int32, callback LooperCallbackFunc, data unsafe.Pointer) {
	cqueue, _ := (*C.AInputQueue)(unsafe.Pointer(queue)), cgoAllocsUnknown
	clooper, _ := (*C.ALooper)(unsafe.Pointer(looper)), cgoAllocsUnknown
	cident, _ := (C.int)(ident), cgoAllocsUnknown
	ccallback, _ := callback.PassValue()
	cdata, _ := (unsafe.Pointer)(unsafe.Pointer(data)), cgoAllocsUnknown
	C.AInputQueue_attachLooper(cqueue, clooper, cident, ccallback, cdata)
}

// InputQueueDetachLooper function as declared in android/input.h:815
func InputQueueDetachLooper(queue *InputQueue) {
	cqueue, _ := (*C.AInputQueue)(unsafe.Pointer(queue)), cgoAllocsUnknown
	C.AInputQueue_detachLooper(cqueue)
}

// InputQueueHasEvents function as declared in android/input.h:822
func InputQueueHasEvents(queue *InputQueue) int32 {
	cqueue, _ := (*C.AInputQueue)(unsafe.Pointer(queue)), cgoAllocsUnknown
	__ret := C.AInputQueue_hasEvents(cqueue)
	__v := (int32)(__ret)
	return __v
}

// InputQueueGetEvent function as declared in android/input.h:828
func InputQueueGetEvent(queue *InputQueue, outEvent **InputEvent) int32 {
	cqueue, _ := (*C.AInputQueue)(unsafe.Pointer(queue)), cgoAllocsUnknown
	coutEvent, _ := (**C.AInputEvent)(unsafe.Pointer(outEvent)), cgoAllocsUnknown
	__ret := C.AInputQueue_getEvent(cqueue, coutEvent)
	__v := (int32)(__ret)
	return __v
}

// InputQueuePreDispatchEvent function as declared in android/input.h:838
func InputQueuePreDispatchEvent(queue *InputQueue, event *InputEvent) int32 {
	cqueue, _ := (*C.AInputQueue)(unsafe.Pointer(queue)), cgoAllocsUnknown
	cevent, _ := (*C.AInputEvent)(unsafe.Pointer(event)), cgoAllocsUnknown
	__ret := C.AInputQueue_preDispatchEvent(cqueue, cevent)
	__v := (int32)(__ret)
	return __v
}

// InputQueueFinishEvent function as declared in android/input.h:844
func InputQueueFinishEvent(queue *InputQueue, event *InputEvent, handled int32) {
	cqueue, _ := (*C.AInputQueue)(unsafe.Pointer(queue)), cgoAllocsUnknown
	cevent, _ := (*C.AInputEvent)(unsafe.Pointer(event)), cgoAllocsUnknown
	chandled, _ := (C.int)(handled), cgoAllocsUnknown
	C.AInputQueue_finishEvent(cqueue, cevent, chandled)
}

// NativeWindowAcquire function as declared in android/native_window.h:63
func NativeWindowAcquire(window *NativeWindow) {
	cwindow, _ := (*C.ANativeWindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	C.ANativeWindow_acquire(cwindow)
}

// NativeWindowRelease function as declared in android/native_window.h:68
func NativeWindowRelease(window *NativeWindow) {
	cwindow, _ := (*C.ANativeWindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	C.ANativeWindow_release(cwindow)
}

// NativeWindowGetWidth function as declared in android/native_window.h:74
func NativeWindowGetWidth(window *NativeWindow) int32 {
	cwindow, _ := (*C.ANativeWindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	__ret := C.ANativeWindow_getWidth(cwindow)
	__v := (int32)(__ret)
	return __v
}

// NativeWindowGetHeight function as declared in android/native_window.h:80
func NativeWindowGetHeight(window *NativeWindow) int32 {
	cwindow, _ := (*C.ANativeWindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	__ret := C.ANativeWindow_getHeight(cwindow)
	__v := (int32)(__ret)
	return __v
}

// NativeWindowGetFormat function as declared in android/native_window.h:86
func NativeWindowGetFormat(window *NativeWindow) int32 {
	cwindow, _ := (*C.ANativeWindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	__ret := C.ANativeWindow_getFormat(cwindow)
	__v := (int32)(__ret)
	return __v
}

// NativeWindowSetBuffersGeometry function as declared in android/native_window.h:102
func NativeWindowSetBuffersGeometry(window *NativeWindow, width int32, height int32, format int32) int32 {
	cwindow, _ := (*C.ANativeWindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	cwidth, _ := (C.int32_t)(width), cgoAllocsUnknown
	cheight, _ := (C.int32_t)(height), cgoAllocsUnknown
	cformat, _ := (C.int32_t)(format), cgoAllocsUnknown
	__ret := C.ANativeWindow_setBuffersGeometry(cwindow, cwidth, cheight, cformat)
	__v := (int32)(__ret)
	return __v
}

// NativeWindowLock function as declared in android/native_window.h:113
func NativeWindowLock(window *NativeWindow, outBuffer *NativeWindowBuffer, inOutDirtyBounds *Rect) int32 {
	cwindow, _ := (*C.ANativeWindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	coutBuffer, _ := outBuffer.PassRef()
	cinOutDirtyBounds, _ := inOutDirtyBounds.PassRef()
	__ret := C.ANativeWindow_lock(cwindow, coutBuffer, cinOutDirtyBounds)
	__v := (int32)(__ret)
	return __v
}

// NativeWindowUnlockAndPost function as declared in android/native_window.h:120
func NativeWindowUnlockAndPost(window *NativeWindow) int32 {
	cwindow, _ := (*C.ANativeWindow)(unsafe.Pointer(window)), cgoAllocsUnknown
	__ret := C.ANativeWindow_unlockAndPost(cwindow)
	__v := (int32)(__ret)
	return __v
}

// NativeWindowFromSurface function as declared in android/native_window_jni.h:34
func NativeWindowFromSurface(env *JNIEnv, surface unsafe.Pointer) *NativeWindow {
	cenv, _ := (*C.JNIEnv)(unsafe.Pointer(env)), cgoAllocsUnknown
	csurface, _ := (unsafe.Pointer)(unsafe.Pointer(surface)), cgoAllocsUnknown
	__ret := C.ANativeWindow_fromSurface(cenv, csurface)
	__v := *(**NativeWindow)(unsafe.Pointer(&__ret))
	return __v
}

// ObbScannerGetObbInfo function as declared in android/obb.h:37
func ObbScannerGetObbInfo(filename string) *ObbInfo {
	cfilename, _ := unpackPCharString(filename)
	__ret := C.AObbScanner_getObbInfo(cfilename)
	__v := *(**ObbInfo)(unsafe.Pointer(&__ret))
	return __v
}

// ObbInfoDelete function as declared in android/obb.h:42
func ObbInfoDelete(obbInfo *ObbInfo) {
	cobbInfo, _ := (*C.AObbInfo)(unsafe.Pointer(obbInfo)), cgoAllocsUnknown
	C.AObbInfo_delete(cobbInfo)
}

// ObbInfoGetPackageName function as declared in android/obb.h:47
func ObbInfoGetPackageName(obbInfo *ObbInfo) string {
	cobbInfo, _ := (*C.AObbInfo)(unsafe.Pointer(obbInfo)), cgoAllocsUnknown
	__ret := C.AObbInfo_getPackageName(cobbInfo)
	__v := packPCharString(__ret)
	return __v
}

// ObbInfoGetVersion function as declared in android/obb.h:52
func ObbInfoGetVersion(obbInfo *ObbInfo) int32 {
	cobbInfo, _ := (*C.AObbInfo)(unsafe.Pointer(obbInfo)), cgoAllocsUnknown
	__ret := C.AObbInfo_getVersion(cobbInfo)
	__v := (int32)(__ret)
	return __v
}

// ObbInfoGetFlags function as declared in android/obb.h:57
func ObbInfoGetFlags(obbInfo *ObbInfo) int32 {
	cobbInfo, _ := (*C.AObbInfo)(unsafe.Pointer(obbInfo)), cgoAllocsUnknown
	__ret := C.AObbInfo_getFlags(cobbInfo)
	__v := (int32)(__ret)
	return __v
}

// StorageManagerNew function as declared in android/storage_manager.h:88
func StorageManagerNew() *StorageManager {
	__ret := C.AStorageManager_new()
	__v := *(**StorageManager)(unsafe.Pointer(&__ret))
	return __v
}

// StorageManagerDelete function as declared in android/storage_manager.h:93
func StorageManagerDelete(mgr *StorageManager) {
	cmgr, _ := (*C.AStorageManager)(unsafe.Pointer(mgr)), cgoAllocsUnknown
	C.AStorageManager_delete(cmgr)
}

// StorageManagerMountObb function as declared in android/storage_manager.h:103
func StorageManagerMountObb(mgr *StorageManager, filename string, key string, cb StorageManagerObbCallbackFunc, data unsafe.Pointer) {
	cmgr, _ := (*C.AStorageManager)(unsafe.Pointer(mgr)), cgoAllocsUnknown
	cfilename, _ := unpackPCharString(filename)
	ckey, _ := unpackPCharString(key)
	ccb, _ := cb.PassValue()
	cdata, _ := (unsafe.Pointer)(unsafe.Pointer(data)), cgoAllocsUnknown
	C.AStorageManager_mountObb(cmgr, cfilename, ckey, ccb, cdata)
}

// StorageManagerUnmountObb function as declared in android/storage_manager.h:109
func StorageManagerUnmountObb(mgr *StorageManager, filename string, force int32, cb StorageManagerObbCallbackFunc, data unsafe.Pointer) {
	cmgr, _ := (*C.AStorageManager)(unsafe.Pointer(mgr)), cgoAllocsUnknown
	cfilename, _ := unpackPCharString(filename)
	cforce, _ := (C.int)(force), cgoAllocsUnknown
	ccb, _ := cb.PassValue()
	cdata, _ := (unsafe.Pointer)(unsafe.Pointer(data)), cgoAllocsUnknown
	C.AStorageManager_unmountObb(cmgr, cfilename, cforce, ccb, cdata)
}

// StorageManagerIsObbMounted function as declared in android/storage_manager.h:115
func StorageManagerIsObbMounted(mgr *StorageManager, filename string) int32 {
	cmgr, _ := (*C.AStorageManager)(unsafe.Pointer(mgr)), cgoAllocsUnknown
	cfilename, _ := unpackPCharString(filename)
	__ret := C.AStorageManager_isObbMounted(cmgr, cfilename)
	__v := (int32)(__ret)
	return __v
}

// StorageManagerGetMountedObbPath function as declared in android/storage_manager.h:120
func StorageManagerGetMountedObbPath(mgr *StorageManager, filename string) string {
	cmgr, _ := (*C.AStorageManager)(unsafe.Pointer(mgr)), cgoAllocsUnknown
	cfilename, _ := unpackPCharString(filename)
	__ret := C.AStorageManager_getMountedObbPath(cmgr, cfilename)
	__v := packPCharString(__ret)
	return __v
}
